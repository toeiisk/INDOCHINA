{
  "swagger" : "2.0",
  "info" : {
    "description" : "This is a taxi service API",
    "version" : "1.0.0",
    "title" : "Taxi Service",
    "contact" : {
      "email" : "you@your-company.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags" : [ {
    "name" : "Information",
    "description" : "Information or description about the cars"
  }, {
    "name" : "Maintenance",
    "description" : "Information or description about cars maintenance"
  }, {
    "name" : "Promotion",
    "description" : "Information or description about promotion for customers either new customers or exist customers."
  }, {
    "name" : "Message",
    "description" : "Instant personal chat between driver and customer"
  } ],
  "paths" : {
    "/cars" : {
      "get" : {
        "tags" : [ "Information" ],
        "summary" : "show all cars in stock",
        "operationId" : "getCarsInformation",
        "description" : "By passing in the appropriate options, you can search for\navailable cars in the system\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "query",
          "name" : "searchString",
          "description" : "pass an optional search string for looking up cars",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "query",
          "name" : "skip",
          "description" : "number of records to skip for pagination",
          "type" : "integer",
          "format" : "int32",
          "minimum" : 0
        }, {
          "in" : "query",
          "name" : "limit",
          "description" : "maximum number of records to return",
          "type" : "integer",
          "format" : "int32",
          "minimum" : 0,
          "maximum" : 50
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Car"
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      }
    },
    "/car" : {
      "post" : {
        "tags" : [ "Information" ],
        "summary" : "adds a car",
        "operationId" : "addCar",
        "description" : "Adds a car to the system\n",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "car",
          "description" : "Car description to add",
          "schema" : {
            "$ref" : "#/definitions/Car"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    },
    "/car/{car_id}" : {
      "get" : {
        "tags" : [ "Information" ],
        "summary" : "show car information from input id",
        "operationId" : "getCarInformation",
        "description" : "By passing in the appropriate options, you can search for\nspecific cars in the system\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "car_id",
          "description" : "pass a specific car ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "schema" : {
              "$ref" : "#/definitions/Car"
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "patch" : {
        "tags" : [ "Information" ],
        "summary" : "edit car information from input id",
        "operationId" : "editCarInformation",
        "description" : "By passing in the appropriate options, you can edit for\nspecific cars in the system\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "car",
          "required" : true,
          "description" : "Car description to edit",
          "schema" : {
            "$ref" : "#/definitions/Car"
          }
        }, {
          "in" : "path",
          "name" : "car_id",
          "description" : "pass a specific car ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "edit car information successfully",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Car"
              }
            }
          },
          "400" : {
            "description" : "bad input"
          }
        }
      }
    },
    "/car/maintenance/{car_id}" : {
      "post" : {
        "tags" : [ "Maintenance" ],
        "summary" : "adds a car maintenance schedule",
        "operationId" : "addCarMaintenance",
        "description" : "Adds a maintenance for specific car\n",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "car_id",
          "description" : "pass an car id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "array of maintenance information",
          "description" : "Maintenance information for specific car",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Maintenance"
            }
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    },
    "/maintenance/{maintenance_id}" : {
      "get" : {
        "tags" : [ "Maintenance" ],
        "summary" : "show maintenance information from input id",
        "operationId" : "getCarMaintenance",
        "description" : "By passing in the appropriate options, you can search for\nspecific cars in the system\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "maintenance_id",
          "description" : "pass a specific maintenance ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "get a specific maintenance information",
            "schema" : {
              "$ref" : "#/definitions/Maintenance"
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "patch" : {
        "tags" : [ "Maintenance" ],
        "summary" : "edit car maintenance information from input id",
        "operationId" : "editCarMaintenance",
        "description" : "By passing in the appropriate options, you can edit for\nspecific cars in the system\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "maintenance",
          "required" : true,
          "description" : "Maintenance description to edit",
          "schema" : {
            "$ref" : "#/definitions/Maintenance"
          }
        }, {
          "in" : "path",
          "name" : "maintenance_id",
          "description" : "pass a specific maintenance ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "edit car information successfully",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Maintenance"
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      }
    },
    "/tracking/{car_id}" : {
      "get" : {
        "tags" : [ "Information" ],
        "summary" : "show tracking information for specific car",
        "operationId" : "getCarTracking",
        "description" : "Get the tracking information of the specific car\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "car_id",
          "description" : "pass a specific car ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "schema" : {
              "$ref" : "#/definitions/GPS"
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "Information" ],
        "summary" : "adds a car tracking",
        "operationId" : "addCarTracking",
        "description" : "Adds a car tracking information to the system\n",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "car_id",
          "description" : "pass a specific car ID",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "tracking information",
          "required" : true,
          "description" : "Tracking information to add for specific car",
          "schema" : {
            "$ref" : "#/definitions/GPS"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    },
    "/promotions" : {
      "get" : {
        "tags" : [ "Promotion" ],
        "summary" : "show all promotions in the system",
        "operationId" : "getPromosInformation",
        "description" : "Get all promotion in the system\n",
        "parameters" : [ {
          "in" : "query",
          "name" : "searchString",
          "description" : "pass an optional search string for looking up cars",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "query",
          "name" : "skip",
          "description" : "number of records to skip for pagination",
          "type" : "integer",
          "format" : "int32",
          "minimum" : 0
        }, {
          "in" : "query",
          "name" : "limit",
          "description" : "maximum number of records to return",
          "type" : "integer",
          "format" : "int32",
          "minimum" : 0,
          "maximum" : 50
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "show all promotions",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Promotion"
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      }
    },
    "/promotion/{promotion_id}" : {
      "get" : {
        "tags" : [ "Promotion" ],
        "summary" : "show promotion information for specific input",
        "operationId" : "getPromoInformation",
        "description" : "Get the promotion information of the specific id\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "promotion_id",
          "description" : "pass a specific promotion ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "show matching promotion",
            "schema" : {
              "$ref" : "#/definitions/Promotion"
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "patch" : {
        "tags" : [ "Promotion" ],
        "summary" : "edit an exist promotion",
        "operationId" : "editPromoInformation",
        "description" : "Edit an exist promotion in the system\n",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "promotion_id",
          "description" : "pass a specific promotion ID",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "promotion information",
          "required" : true,
          "description" : "Promotion information for customers",
          "schema" : {
            "$ref" : "#/definitions/Promotion"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    },
    "/promotion" : {
      "post" : {
        "tags" : [ "Promotion" ],
        "summary" : "adds a new promotion",
        "operationId" : "addPromoInformation",
        "description" : "Adds a new promotion to the system\n",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "promotion information",
          "required" : true,
          "description" : "Promotion information to add to the system",
          "schema" : {
            "$ref" : "#/definitions/Promotion"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    },
    "/message/{room_id}" : {
      "get" : {
        "tags" : [ "Message" ],
        "summary" : "show history chat from rood id",
        "operationId" : "getMessageHistory",
        "description" : "Get the history of the specific room id\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "room_id",
          "description" : "pass a specific room ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "show matching promotion",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Message"
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "Message" ],
        "summary" : "add a new message",
        "operationId" : "addMessage",
        "description" : "add new message to the specific room\n",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "room_id",
          "description" : "pass a specific room ID",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "message",
          "required" : true,
          "description" : "Message history",
          "schema" : {
            "$ref" : "#/definitions/Message"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    },
    "/message/{room_id}/{message_id}" : {
      "delete" : {
        "tags" : [ "Message" ],
        "summary" : "delete a sent message",
        "operationId" : "deleteMessageHistory",
        "description" : "delete an exist message history\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "room_id",
          "description" : "pass a specific room ID",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "path",
          "name" : "message_id",
          "description" : "pass a specific message ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "item deleted"
          },
          "204" : {
            "description" : "item not found (No content)"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        }
      }
    }
  },
  "definitions" : {
    "Car" : {
      "type" : "object",
      "required" : [ "name", "class", "manufacturer" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "C0001"
        },
        "name" : {
          "type" : "string",
          "example" : "RS5"
        },
        "class" : {
          "type" : "string",
          "example" : "Coupe"
        },
        "manufacturer" : {
          "$ref" : "#/definitions/Manufacturer"
        },
        "releaseDate" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2016-08-29T09:12:33.001Z"
        },
        "maintenance" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Maintenance"
          }
        },
        "driver" : {
          "$ref" : "#/definitions/Driver"
        }
      }
    },
    "Manufacturer" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Audi"
        },
        "homePage" : {
          "type" : "string",
          "format" : "url",
          "example" : "https://www.audi.com"
        },
        "phone" : {
          "type" : "string",
          "example" : "02-765-8888"
        }
      }
    },
    "Maintenance" : {
      "type" : "object",
      "required" : [ "id", "startDate", "carId" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "M0001"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2020-10-05T00:00:00Z"
        },
        "carId" : {
          "type" : "string",
          "example" : "C0001"
        },
        "mechanicId" : {
          "$ref" : "#/definitions/Mechanic"
        }
      }
    },
    "Mechanic" : {
      "required" : [ "id", "name" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "MC0001"
        },
        "name" : {
          "type" : "string",
          "example" : "Worapath Pakkavesa"
        },
        "joinDate" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2020-10-05T00:00:00Z"
        }
      }
    },
    "Driver" : {
      "required" : [ "id", "name" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "DV0001"
        },
        "name" : {
          "type" : "string",
          "example" : "Worapath Pakkavesa"
        },
        "joinDate" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2020-10-05T00:00:00Z"
        }
      }
    },
    "GPS" : {
      "required" : [ "carId" ],
      "properties" : {
        "carId" : {
          "$ref" : "#/definitions/Car"
        },
        "address" : {
          "type" : "string",
          "example" : "Chalongkrung Road Lat Krabang Bangkok"
        },
        "time" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2020-10-05T00:00:00Z"
        }
      }
    },
    "Promotion" : {
      "required" : [ "name", "description" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Free for new customer"
        },
        "description" : {
          "type" : "string",
          "example" : "Free taxi service charge and fees for first time use on new customer"
        }
      }
    },
    "Message" : {
      "required" : [ "room_id", "message_id", "text" ],
      "properties" : {
        "room_id" : {
          "type" : "string",
          "example" : "R0001"
        },
        "message_id" : {
          "type" : "string",
          "example" : "MS0001"
        },
        "text" : {
          "type" : "string",
          "example" : "Hello driver ! Confirm taxi request."
        }
      }
    }
  },
  "host" : "virtserver.swaggerhub.com",
  "basePath" : "/borrabeer/TaxiService/1.0.0",
  "schemes" : [ "https" ]
}